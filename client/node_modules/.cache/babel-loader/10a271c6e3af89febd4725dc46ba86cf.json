{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\ecommerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionStartAsync\n    } = this.props;\n    fetchCollectionStartAsync(); // const { updateCollections } = this.props\n    // const collectionRef = firestore.collection('collections');\n    // ## doable but need navigating function to navigate the nested obj\n    // fetch('https://firestore.googleapis.com/v1/projects/ecommerce-db-bac64/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections))\n    // ### promise && then pattern (only get data when re-mount this component)\n    // collectionRef.get().then(\n    //     snapshot => {\n    //         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    //         updateCollections(collectionsMap);\n    //         this.setState({ loading: false });\n    //     }\n    // )\n    // ### observer && observable pattern (get data whenever snapshot changes)\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);","map":{"version":3,"sources":["C:/code/ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionStartAsync","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchtoProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEH,MAAAA;AAAF,QAAgC,KAAKI,KAA3C;AACAJ,IAAAA,yBAAyB,GAFT,CAGhB;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAET,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAER,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAvCkC;;AA0CvC,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,yBAAyB,EAAE,MAAMS,QAAQ,CAACT,yBAAyB,EAA1B;AADL,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionStartAsync } = this.props;\r\n        fetchCollectionStartAsync()\r\n        // const { updateCollections } = this.props\r\n        // const collectionRef = firestore.collection('collections');\r\n        \r\n        // ## doable but need navigating function to navigate the nested obj\r\n        // fetch('https://firestore.googleapis.com/v1/projects/ecommerce-db-bac64/databases/(default)/documents/collections')\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(collections))\r\n\r\n\r\n        // ### promise && then pattern (only get data when re-mount this component)\r\n        // collectionRef.get().then(\r\n        //     snapshot => {\r\n        //         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n        //         updateCollections(collectionsMap);\r\n        //         this.setState({ loading: false });\r\n        //     }\r\n        // )\r\n        \r\n        // ### observer && observable pattern (get data whenever snapshot changes)\r\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionsMap);\r\n        //     this.setState({ loading: false });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\r\n                <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n    fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\r\n})\r\n\r\nexport default connect(null, mapDispatchtoProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}