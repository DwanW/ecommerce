{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\ecommerce\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      try {\n        // const { user } = await auth.createUserWithEmailAndPassword(email, password);\n        // await createUserProfileDocument(user, { displayName });\n        signUpStart({\n          displayName,\n          email,\n          password\n        });\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: credentials => dispatch(signUpStart(credentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/code/ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","createUserProfileDocument","SignUpContainer","SignUpTitle","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","props","alert","setState","error","console","handleChange","name","value","target","render","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        const { signUpStart } = this.props\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            // await createUserProfileDocument(user, { displayName });\r\n            signUpStart({displayName,email,password});\r\n\r\n            this.setState({\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            })\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle>I do not have an account</SignUpTitle>\r\n                <span>Sign up with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={this.handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n\r\n            </SignUpContainer>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (credentials) => dispatch(signUpStart(credentials))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}